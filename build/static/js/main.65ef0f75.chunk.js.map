{"version":3,"sources":["redux/actions/contactsActions.js","redux/actions/authorizationActions.js","routes.js","components/navigation/styledNavigation.js","components/navigation/NavigationItem.js","components/navigation/Navigation.js","components/userMenu/styledUserMenu.js","components/userMenu/UserMenu.js","components/header/styledHeader.js","components/header/Header.js","components/header/Layout.js","components/routes/PublicRoute.js","components/routes/PrivetRoute.js","components/App.js","redux/redusers/contactsReducer.js","redux/redusers/authorizationReduser.js","redux/redusers/rootRedusers.js","redux/store.js","index.js"],"names":["addContactActionCreator","createAction","getContacts","deleteContactActionCreator","filterContactsActionCreater","e","payload","target","value","alertContactsActionCreater","setLoading","setError","singUp","singIn","singOut","contactsRoutes","path","name","exact","component","lazy","isPrivate","restricted","Ul","styled","div","NavigationItem","isAuth","className","to","activeClassName","Navigation","useSelector","state","auth","map","route","key","DIV","UserMenu","email","dispatch","useDispatch","src","alt","width","type","onClick","Div","Header","Layout","children","PublicRoute","PrivateRoute","App","fallback","initialState","items","filter","text","error","isLoading","contactsReducer","item","id","idToken","refreshToken","localId","authReducer","authPersistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","contacts","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.65ef0f75.chunk.js","sourcesContent":["\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContactActionCreator = createAction(\"ADD_NEW_CONTACT\")\n\nexport const getContacts = createAction(\"GET_CONTACTS\");\n\nexport const deleteContactActionCreator = createAction(\"DELETE_NEW_CONTACT\")\n\nexport const filterContactsActionCreater = createAction(\"FILTER_CONTACT\", e => {\n    const { value } = e.target;\n    return {\n        payload: value,\n    }\n})\n\nexport const alertContactsActionCreater = createAction(\"ALERT_CONTACT\")\n\nexport const setLoading = createAction(\"LOADING_CONTACT\");\n\nexport const setError = createAction(\"SET_ERROR\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const addContactActionCreator = (data) => {\n//     return {\n//         type: ADDNEWCONTACT, payload: { ...data, id: uuidv4() }\n//     }\n// }\n\n// export const deleteContactActionCreator = (e) => {\n//     const id = e.target.dataset.id;\n//     return {\n//         type: DELETECONTACT, payload: id\n//     }\n// }\n\n// export const filterContactsActionCreater = (e) => {\n//     const { value } = e.target;\n//     return {\n//         type: SETFILTER, payload: value,\n//     }\n\n// }\n\n// export const alertContactsActionCreater = (text) => {\n//     return {\n//         type: SETALERT, payload: text\n//     }\n\n// }","import { createAction } from '@reduxjs/toolkit';\n\nexport const singUp = createAction(\"SING_UP\")\nexport const singIn = createAction(\"SING_IN\")\nexport const singOut = createAction(\"SING_OUT\")\nexport const setLoading = createAction(\"LOADING_AUTHORIZATION\");\nexport const setError = createAction(\"SET_ERROR_AUTHORIZATION\");\nexport const alertActionAuth = createAction(\"ALERT_CONTACT\")","\nimport { lazy } from \"react\";\n\nexport const contactsRoutes = [\n    {\n        path: \"/\",\n        name: \"Home\",\n        exact: true,\n        component: lazy(() =>\n            import(\"./page/home/HomePage\")\n        ),\n        isPrivate: false,\n        restricted: false,\n    },\n    {\n        path: \"/register\",\n        name: \"Register\",\n        exact: true,\n        component: lazy(() =>\n            import(\"./page/register/RegisterPage\")\n        ),\n        isPrivate: false,\n        restricted: true,\n    },\n    {\n        path: \"/login\",\n        name: \"Login\",\n        exact: true,\n        component: lazy(() =>\n            import(\"./page/login/LoginPage\")\n        ),\n        isPrivate: false,\n        restricted: true,\n    },\n    {\n        path: \"/contacts\",\n        name: \"Contacts\",\n        exact: true,\n        component: lazy(() =>\n            import(\"./page/contacts/ContactsPage\")\n        ),\n        isPrivate: true,\n        restricted: false,\n    },\n];","import styled from \"styled-components\";\n\nexport const Ul = styled.div`\ndisplay:flex;\n\n.navigationItem{\n    min-width: 80px;\n    margin-left: 10px;\n    padding: 5px;\n    list-style-type: none;\n    border: 1px solid #fff;\n    border-radius: 50px;\n  text-align:center;\n  &:hover,&:focus{\n      color:#d98729; \n      border: 1px solid #d98729;\n  }\n}\n.navigation-link{\ntext-decoration:none;\nfont-weight: 500;\nfont-size:20px;\ncolor:#fff;\ncursor:pointer;\n}\n&:hover,&:focus{\n   color:#d98729; \n}\n.navigation-link-active{\n    color:#d98729;\n    \n}\n\n`","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst NavigationItem = ({ isAuth, path, name, exact, isPrivate, restricted }) => {\n    return (\n        <>\n            {!isPrivate && !restricted && (<li key={path} className=\"navigationItem\">\n                <NavLink exact={exact} to={path} className=\"navigation-link\"\n                    activeClassName=\"navigation-link-active\">\n                    {name}\n                </NavLink>\n            </li>)}\n            {isAuth && isPrivate && !restricted && (<li key={path} className=\"navigationItem\">\n                <NavLink exact={exact} to={path} className=\"navigation-link\"\n                    activeClassName=\"navigation-link-active\">\n                    {name}\n                </NavLink>\n            </li>)}\n            {!isAuth && !isPrivate && restricted && (<li key={path} className=\"navigationItem\">\n                <NavLink exact={exact} to={path} className=\"navigation-link\"\n                    activeClassName=\"navigation-link-active\">\n                    {name}\n                </NavLink>\n            </li>)}\n        </>\n    )\n}\n\nexport default NavigationItem\n","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { contactsRoutes } from \"../../routes\";\nimport { Ul } from \"./styledNavigation\";\nimport NavigationItem from \"./NavigationItem\";\n\nconst Navigation = () => {\n    const isAuth = useSelector(state => state.auth.isAuth)\n    return (\n        <div>\n\n            <Ul>\n                {contactsRoutes.map((route) => (\n                    <NavigationItem {...route} isAuth={isAuth} key={route.path} />\n                )\n                )}\n            </Ul>\n\n        </div>\n    )\n}\n\nexport default Navigation\n","import styled from \"styled-components\";\n\nexport const DIV = styled.div`\ndisplay:flex;\nalign-items:center;\n.TitleNav{\n    margin-left:10px;\n    font-weight: 500;\nfont-size:20px;\ncolor:#d98729; \n}\n.ButtonNav{\n     margin-left: 10px;\n    padding: 5px;\n    min-width: 80px;\n     border: 1px solid #fff;\n    border-radius: 50px;\n  text-align:center;\n  font-weight: 500;\nfont-size:20px;\ncolor:#fff;\nbackground-color:#2c29d9;\ncursor:pointer;\n  &:hover,&:focus{\n      color:#d98729; \n      border: 1px solid #d98729;\n}\n`","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { singOut } from '../../redux/actions/authorizationActions';\nimport { DIV } from './styledUserMenu';\n\nconst UserMenu = () => {\n    const avatar = 'https://icon-library.com/images/141782.svg.svg'\n    const isAuth = useSelector((state) => state.auth.isAuth);\n    const email = useSelector((state) => state.auth.email);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(singOut());\n    }\n\n    return (\n        <>\n            {isAuth && (<DIV>\n                <img src={avatar} alt='avatar' width='32' />\n                <p className=\"TitleNav\">Hi, {email} </p>\n                <button type=\"button\" className=\"ButtonNav\" onClick={handleLogout}>Logout</button>\n            </DIV>)}\n        </>\n    )\n}\n\nexport default UserMenu\n","import styled from \"styled-components\";\n\nexport const Div = styled.div`\ndisplay:flex;\njustify-content:space-between;\nalign-items:center;\npadding:20px;\nbackground-color:#2c29d9;\n`","import React from 'react';\nimport Navigation from '../navigation/Navigation';\nimport UserMenu from '../userMenu/UserMenu';\nimport { Div } from './styledHeader';\n\n\nconst Header = () => {\n    return (\n        <Div>\n            <Navigation />\n            <UserMenu />\n            {/* <input type='checkbox'></input> */}\n        </Div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\n\n\n\nconst Layout = ({ children }) => {\n    return (\n        <div>\n            <Header />\n            {children}\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ path, exact, component, restricted, isAuth }) => {\n    return isAuth && restricted ?\n        (<Redirect to='/contacts' />) :\n        (\n            <div>\n                <Route path={path} exact={exact} component={component} />\n            </div>\n        )\n}\n\nexport default PublicRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ path, exact, component, isAuth }) => {\n    return isAuth ? (\n        <div>\n            <Route path={path} exact={exact} component={component} />\n        </div>\n    ) : (\n            <Redirect to='/login' />\n        );\n}\n\nexport default PrivateRoute","import React, { Suspense } from 'react';\nimport { contactsRoutes } from '../routes'\nimport { Switch, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport Layout from './header/Layout';\nimport PublicRoute from './routes/PublicRoute';\nimport PrivateRoute from './routes/PrivetRoute';\n\n\n\nconst App = () => {\n    const isAuth = useSelector((state) => state.auth.isAuth);\n    return (\n        <>\n\n            <Layout>\n                <Suspense fallback=''>\n                    <Switch>\n                        {contactsRoutes.map(route => (\n                            !route.isPrivate ?\n                                < PublicRoute key={route.path} isAuth={isAuth} {...route} />\n                                : <PrivateRoute key={route.path} isAuth={isAuth} {...route} />\n\n\n                        ))}\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </Suspense>\n            </Layout>\n        </>\n    )\n}\n\n\nexport default App\n\n// const mapStateToProps = (state) => {\n//     return { contacts: state.contacts.items };\n// }\n\n\n\n","// import { createReducer } from '@reduxjs/toolkit';\n// import { combineReducers } from \"redux\";\nimport { addContactActionCreator, deleteContactActionCreator, filterContactsActionCreater, alertContactsActionCreater, setLoading, setError, getContacts } from '../actions/contactsActions';\n\nconst contactsReducer = (state = { ...initialState }, { type, payload }) => {\n    switch (type) {\n        case addContactActionCreator.type:\n            return { ...state, items: [...state.items, payload] };\n        case getContacts.type:\n            return { ...state, items: [...payload] };\n        case deleteContactActionCreator.type:\n            return { ...state, items: [...state.items.filter((item) => item.id !== payload)] };\n        case filterContactsActionCreater.type:\n            return { ...state, filter: payload, };\n        case alertContactsActionCreater.type:\n            return { ...state, text: payload, };\n        case setLoading.type:\n            return { ...state, isLoading: !state.isLoading };\n        case setError.type:\n            return { ...state, error: payload };\n\n        default:\n            return state;\n    }\n}\n\nconst initialState = {\n    items: [],\n    filter: '',\n    text: '',\n    error: '',\n    isLoading: false,\n}\n\nexport default contactsReducer\n\n\n\n\n\n\n\n\n\n\n\n\n// const addContact = (state, action) => [...state, action.payload]\n\n// const deleteContact = (state, action) => [...state.filter((item) => item.id !== action.payload)]\n\n// const filterContact = (_, action) => action.payload\n\n// const alertContact = (_, action) => action.payload\n\n\n\n\n\n// const items = createReducer([], {\n//     [addContactActionCreator]: addContact,\n//     [deleteContactActionCreator]: deleteContact,\n// })\n\n// const filter = createReducer('', {\n//     [filterContactsActionCreater]: filterContact,\n// })\n\n// const text = createReducer('', {\n//     [alertContactsActionCreater]: alertContact,\n// })\n\n\n\n\n\n// export default combineReducers({\n//     items,\n//     filter,\n//     text,\n// })\n\n","import { singUp, singIn, singOut, setLoading, setError } from \"../actions/authorizationActions\";\n\nconst initialState = {\n    email: '',\n    idToken: '',\n    refreshToken: '',\n    error: '',\n    localId: '',\n    text: '',\n    isLoading: false,\n    isAuth: false,\n}\n\n\nconst authReducer = (state = { ...initialState }, { type, payload }) => {\n    switch (type) {\n        case singUp.type:\n            return {\n                ...state, email: payload.email,\n                idToken: payload.idToken,\n                refreshToken: payload.refreshToken,\n                isAuth: true,\n                localId: payload.localId,\n            };\n        case singIn.type:\n            return {\n                ...state,\n                email: payload.email,\n                idToken: payload.idToken,\n                refreshToken: payload.refreshToken,\n                isAuth: true,\n                localId: payload.localId,\n            };\n        case singOut.type:\n            return { ...initialState };\n        case setLoading.type:\n            return { ...state, isLoading: !state.isLoading };\n        case setError.type:\n            return { ...state, error: payload };\n        // case alertActionAuth.type:\n        //     return { ...state, text: payload, };\n\n        default:\n            return state;\n    }\n}\n\nexport default authReducer ","import { combineReducers } from 'redux';\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from './contactsReducer';\nimport authReducer from './authorizationReduser';\n\nconst authPersistConfig = {\n    key: \"auth\",\n    storage,\n    whitelist: [\"email\", \"idToken\", \"refreshToken\", \"isAuth\", \"localId\"],\n};\n\nconst rootReducer = combineReducers({\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n})\n\nexport default rootReducer\n// \"now < 1614981600000\"","\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport rootReducer from './redusers/rootRedusers';\n\n\nconst store = configureStore(\n    {\n        reducer: rootReducer,\n        middleware: getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }),\n    }\n)\n\n\n\nexport const persistor = persistStore(store);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './index.css';\nimport App from './components/App';\nimport store, { persistor } from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}