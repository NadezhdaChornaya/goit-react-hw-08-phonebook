{"version":3,"sources":["components/contactForm/styledForm.js","components/notifications/styledNotification.js","components/notifications/Notification.js","redux/selectors/contactsSelectors.js","components/contactForm/ContactForm.js","redux/operations/contactsOperations.js","components/contactList/styledList.js","components/contactList/ContactList.js","components/filter/styledFilter.js","components/filter/Filter.js","components/styledApp.js","page/contacts/ContactsPage.js","redux/dataBackEnd.js"],"names":["FormWrapper","styled","form","AlertWrapper","div","Notification","text","className","getContactsSelector","state","contacts","items","getFilterValueSelector","filter","getTextAlertSelector","getLoadingSelector","isLoading","getFilterSelector","createSelector","contact","name","toLowerCase","includes","ContactForm","useSelector","contactsSelectors","dispatch","useDispatch","useState","number","setState","useEffect","setTimeout","alertContactsActionCreater","handleChange","e","target","value","prev","CSSTransition","in","classNames","timeout","unmountOnExit","onSubmit","preventDefault","length","some","getState","idToken","auth","localId","setLoading","axios","post","REACT_APP_BASE_URL","then","response","addContactActionCreator","id","data","catch","error","setError","finally","type","onChange","Div","LI","transition","li","attrs","mountOnEnter","ContactList","handleDeleteContact","delete","deleteContactActionCreator","deleteContactOperation","TransitionGroup","component","map","onClick","FilterWrapper","Filter","placeholder","filterContactsActionCreater","PhonebookWrapper","connect","appear","REACT_APP_SINGUP_URL","REACT_APP_SINGIN_URL"],"mappings":"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","file":"static/js/6.c088d13b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\nmargin-bottom: 20px;\n.label{\n    font-size: 20px;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 5px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n    \n    font-size: 20px;\n    border-radius: 5px;\n    border: 1px solid #afaeb0;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n.buttonWrapper{\n   display:flex;\n   justify-content:flex-end;\n}\n.button{\n    \t\n   min-width: 80px;\n   padding: 5px 10px; \n   font-size: 20px;\n   border-radius: 50px;\n   border-color: #eeedfa;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #d98729;\n   background-color:#eeedfa;\n   cursor: pointer;\n   \n   &:hover {\n       color:#fff;\n       background-color:#d98729;\n       /* box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);} */\n}\n.alertSlide-enter{\ntransform: translateX(200%);\n}\n.alertSlide-enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n.alertSlide-exit{\n    transform: translateX(0);\n}\n.alertSlide-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n\n`","import styled from 'styled-components';\n\nexport const AlertWrapper = styled.div`\nwidth: 50vw;\nmargin:0 auto;\npadding: 20px;\nbackground-color: #f55d67;\nborder: 1px solid #afaeb0;\nborder-radius: 5px;\n.alertText{\n    text-align: center;\n    font-size: 30px;\n    color: #ffffff;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { AlertWrapper } from './styledNotification';\n\nconst Notification = ({ text }) => {\n    return (\n        <AlertWrapper>\n            <p className=\"alertText\">&#10071;{text}&#10071;</p>\n        </AlertWrapper>\n    )\n}\n\nexport default Notification\n\nNotification.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContactsSelector = state => state.contacts.items;\nconst getTextAlertSelector = state => state.contacts.text;\nconst getLoadingSelector = state => state.contacts.isLoading;\nconst getFilterValueSelector = state => state.contacts.filter;\n\nconst getFilterSelector = createSelector([getContactsSelector, getFilterValueSelector], (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n})\n\n// eslint-disable-next-line\nexport default {\n    getContactsSelector,\n    getTextAlertSelector,\n    getLoadingSelector,\n    getFilterSelector,\n    getFilterValueSelector,\n};\n\n\n// const getFilterSelector = state => {\n//     const items = getContactsSelector(state)\n//     const filterValue = getFilterValueSelector(state)\n//     items.filter(item => item.name.toLowerCase()\n//         .includes(filterValue.toLowerCase()))\n// };\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CSSTransition } from 'react-transition-group';\n\nimport { FormWrapper } from './styledForm';\nimport { alertContactsActionCreater } from '../../redux/actions/contactsActions';\nimport Notification from '../notifications/Notification'\nimport { addNewContactOperation } from '../../redux/operations/contactsOperations';\nimport contactsSelectors from '../../redux/selectors/contactsSelectors';\n// import { addContactActionCreator } from '../../redux/redusers/contactsReducer'\n// import PropTypes from \"prop-types\";\n// import { connect } from 'react-redux';\n\n\nconst ContactForm = () => {\n    const contacts = useSelector((state) => contactsSelectors.getContactsSelector(state))\n    const text = useSelector((state) => contactsSelectors.getTextAlertSelector(state))\n    const isLoading = useSelector((state) => contactsSelectors.getLoadingSelector(state));\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        name: '',\n        number: '',\n    });\n    useEffect(() => {\n        if (text) {\n            setTimeout(() => { dispatch(alertContactsActionCreater('')) }, 2000)\n        }\n\n    }, [text, dispatch])\n\n    const hadlleSubmit = e => {\n        e.preventDefault();\n        if (!state.name.length) {\n            dispatch(alertContactsActionCreater('Please, enter your name'))\n        }\n        else if (!state.number.length) {\n            dispatch(alertContactsActionCreater('Please, enter your number'))\n        }\n        else {\n            if (contacts.some((contact) =>\n                contact.name.toLowerCase() === state.name.toLowerCase())) {\n\n                dispatch(alertContactsActionCreater(`${state.name} is already in contacts.`))\n            }\n            else {\n                dispatch(addNewContactOperation(state));\n            }\n        }\n\n        setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setState(prev => ({\n            ...prev, [name]: value\n        }))\n    }\n\n    return (\n        <>\n            {text &&\n                <CSSTransition\n                    in={true}\n                    classNames=\"alertSlide\"\n                    timeout={500}\n                    unmountOnExit\n                >\n                    <Notification text={text} />\n                </CSSTransition>}\n            {isLoading && <h2>...Send data...</h2>}\n            <FormWrapper className=\"wrapper\" onSubmit={hadlleSubmit}>\n                <label className=\"label\">Name\n                     <input className=\"input\" type=\"text\" name=\"name\" value={state.name} onChange={handleChange}></input>\n                </label>\n                <label className=\"label\">Number\n                     <input className=\"input\" type=\"tel\" name=\"number\" value={state.number} onChange={handleChange}></input>\n                </label>\n                <div className=\"buttonWrapper\">\n                    <button className=\"button\" type=\"submit\">Add contact</button>\n                </div>\n            </FormWrapper>\n\n        </>\n    )\n}\n\nexport default ContactForm;\n\n// const mapStateToProps = (state) => {\n//     return {\n//         contacts: state.contacts.items,\n//         text: state.contacts.text,\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         alertContactsActionCreater: (data) => {\n//             dispatch(alertContactsActionCreater(data))\n//         },\n//         addContactActionCreator: (data) => {\n//             dispatch(addContactActionCreator(data))\n//         },\n//     };\n// };\n\n\n\n\n// ContactForm.propTypes = {\n//     addContactActionCreator: PropTypes.func.isRequired,\n//     alertContactsActionCreater: PropTypes.func.isRequired,\n// }\n","import axios from \"axios\";\nimport { REACT_APP_BASE_URL } from '../dataBackEnd'\nimport { addContactActionCreator, deleteContactActionCreator, setLoading, setError } from '../actions/contactsActions';\n\nexport const addNewContactOperation = (contact) => (dispatch, getState) => {\n    const idToken = getState().auth.idToken;\n    const localId = getState().auth.localId;\n    dispatch(setLoading())\n    axios.post(\n        `${REACT_APP_BASE_URL}/contacts/${localId}.json?auth=${idToken}`,\n        contact\n    )\n        .then(response => dispatch(addContactActionCreator({ ...contact, id: response.data.name })))\n        .catch(error => dispatch(setError(error)))\n        .finally(dispatch(setLoading()))\n}\n\n\n\nexport const deleteContactOperation = (id) => (dispatch, getState) => {\n    const idToken = getState().auth.idToken;\n    const localId = getState().auth.localId;\n    dispatch(setLoading());\n    axios.delete(`${REACT_APP_BASE_URL}/contacts/${localId}/${id}.json?auth=${idToken}`)\n        .then(response => dispatch(deleteContactActionCreator(id)))\n        .catch(error => dispatch(setError(error)))\n        .finally(dispatch(setLoading()))\n\n}\n\n// ======== rules for FireBase user folder =================\n// {\n//     \"rules\": {\n//      \n//           \"contacts\": {\n//             \"$uid\": {\n//               \".read\": \"$uid === auth.uid\",\n//                 \".write\": \"$uid === auth.uid\"\n//             }\n//           }\n//     }\n//   }\n// ================================================================\n// rules for OfflineAudioCompletionEvent\n// \"users\": {\n//   \"$user_id\": {\n//     \".write\": \"auth !== null && auth.user_id === 'yuY4zi24JadojY4Y6JwlKHUwnof2'\"\n//   }\n// }\n\n// {\n//     \"rules\": {\n//         \".read\": \"now < 1614981600000\",  // 2021-3-6\n//             \".write\": \"auth !=null\",  // 2021-3-6\n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const getContactsOperation = () => (dispatch, getState) => {\n//     const idToken = getState().auth.idToken;\n//     dispatch(setLoading());\n//     axios.get(\n//         `${process.env.REACT_APP_BASE_URL}/contacts.json?auth=${idToken}`\n//     )\n//         .then(response => {\n//             dispatch(getContacts(Object.keys(response.data).map((key) => ({\n//                 ...response.data[key],\n//                 id: key,\n//             }))))\n//         })\n//         .catch(error => dispatch(setError(error)))\n//         .finally(dispatch(setLoading()))\n// }","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n.contactList{\n  list-style: none;\n}\n\n.itemContact{\n    display:flex;\n    justify-content: space-between;\n    padding: 5px 10px;\n    font-size: 20px;\n    background-color:#ffffff;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n    border: 1px solid #afaeb0;\n    border-radius: 5px;\n   \n     &:not(:last-child) {\n      margin-bottom: 10px;}\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n\n}\n.button{\n   min-width: 80px;\n   padding: 5px 10px; \n   font-size: 20px;\n   border-radius: 50px;\n   border-color: #eeedfa;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #d98729;\n   border-color: #eeedfa;\n\n   background-color:#eeedfa;\n   cursor: pointer;\n   \n   &:hover {\n     color:#fff;\n       background-color:#d98729;\n       /* box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);} */\n\n`","import React from 'react';\nimport { TransitionGroup } from 'react-transition-group';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Div } from './styledList';\nimport transition from 'styled-transition-group';\n\nimport { deleteContactOperation } from '../../redux/operations/contactsOperations';\nimport contactsSelectors from '../../redux/selectors/contactsSelectors';\n// import PropTypes from \"prop-types\";\n// import { connect } from 'react-redux';\n// import { deleteContactActionCreator } from '../../redux/actions/contactsActions';\n\nconst LI = transition.li.attrs({\n    mountOnEnter: true,\n    unmountOnExit: true,\n    timeout: 250,\n})`\n&:enter{transform: translateX(-200%);}\n&:enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n&:exit{transform: transform: translateX(0);}\n&:exit-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n`\n\nconst ContactList = () => {\n    const contacts = useSelector((state) => contactsSelectors.getFilterSelector(state))\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = (e) => {\n        const id = e.target.id;\n        dispatch(deleteContactOperation(id));\n    };\n    return (\n\n        <Div>\n            <TransitionGroup component=\"ul\" className=\"contactList wrapper\">\n                {contacts.map(({ id, name, number }) => {\n                    return (\n                        <LI key={id} timeout={250} className=\"itemContact\">\n                            {`${name}:  ${number}`}\n                            <button className=\"button\" type=\"button\" id={id} onClick={handleDeleteContact}>Delete</button>\n                        </LI>\n                    )\n                })}\n\n            </TransitionGroup >\n        </Div>\n\n\n    )\n}\n\nexport default ContactList\n\n// const mapStateToPerops = (state) => {\n//     return {\n//         contacts: state.contacts.items.filter(item => item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())),\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n\n//         deleteContactActionCreator: (data) => {\n//             dispatch(deleteContactActionCreator(data))\n//         },\n//     }\n// }\n\n\n\n\n// ContactList.propTypes = {\n//     deleteContactActionCreator: PropTypes.func.isRequired,\n//     contacts: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//     })),\n// }","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\nmargin-bottom: 20px;\n\n.titleFilter{\nfont-size: 25px;\ncolor:#2F4F4F;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 20px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n\n    font-size: 20px;\n    border-radius: 5px;\n    border: 1px solid #afaeb0;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n`;","import React from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { FilterWrapper } from './styledFilter'\nimport { filterContactsActionCreater } from '../../redux/actions/contactsActions';\nimport contactsSelectors from '../../redux/selectors/contactsSelectors';\n// import { connect } from 'react-redux';\n// import PropTypes from \"prop-types\";\n\nconst Filter = () => {\n    const filter = useSelector((state) => contactsSelectors.getFilterValueSelector(state))\n    const dispatch = useDispatch();\n\n    const handleFilter = (data) => dispatch(filterContactsActionCreater(data))\n\n    return (\n\n        <FilterWrapper className=\"wrapper\">\n            <h3 className=\"titleFilter\">Find contacts by name</h3>\n            <input name=\"filter\" type=\"text\" className=\"input\" placeholder=\"Search...\" value={filter} onChange={handleFilter} />\n        </FilterWrapper>\n    )\n}\n\nexport default Filter\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const mapStateToProps = (state) => {\n//     return {\n//         state: state.contacts.items,\n//         filter: state.contacts.filter\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n\n//         filterContactsActionCreater: (data) => {\n//             dispatch(filterContactsActionCreater(data))\n//         },\n//     }\n// }\n\n\n\n// Filter.propTypes = {\n//     filterContactsActionCreater: PropTypes.func.isRequired,\n//     contacts: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//     })),\n// }\n","import styled from 'styled-components';\n\nexport const PhonebookWrapper = styled.div`\n.mainTitle,.title{\ntext-align: center;\ncolor:#3b2dd6;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n.mainTitle{\n    margin-bottom:20px;  \n    font-size: 40px;\n}\n.title{\n    margin-bottom:10px;\n    font-size: 30px;   \n}\n\n.titleSlide-appear{\n    transform: translateY(-100%);\n}\n.titleSlide-appear-active{\n    transform: translateY(0);\n    transition:transform 500ms linear;\n}\n\n.filterSlide-enter{\ntransform: scale(0);\n    \n}\n.filterSlide-enter-active{\n   transform: scale(1);\n  transition: transform 500ms ease-in-out;\n}\n.filterSlide-exit{\n    transform: scale(1);\n}\n.filterSlide-exit-active{\n    transform: scale(0);\n  transition: transform 500ms ease-in-out;\n}\n\n.alertSlide-enter{\ntransform: translateX(200%);\n}\n.alertSlide-enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n.alertSlide-exit{\n    transform: translateX(0);\n}\n.alertSlide-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n`","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nimport ContactForm from '../../components/contactForm/ContactForm';\nimport ContactList from '../../components/contactList/ContactList';\nimport Filter from '../../components/filter/Filter';\nimport { PhonebookWrapper } from '../../components/styledApp';\n\n\nconst ContactsPage = ({ contacts }) => {\n    return (\n\n        <PhonebookWrapper>\n            <CSSTransition\n                in={true}\n                appear={true}\n                classNames=\"titleSlide\"\n                timeout={500}\n                unmountOnExit\n            >\n                <h1 className=\"mainTitle\">Phonebook</h1>\n            </CSSTransition>\n            <ContactForm />\n            <h2 className=\"title\">Contacts</h2>\n            <CSSTransition\n                in={contacts.length > 1}\n                classNames=\"filterSlide\"\n                timeout={500}\n                unmountOnExit>\n                <Filter />\n            </CSSTransition>\n            {contacts.length > 0 && (<CSSTransition\n                in={true}\n                appear={true}\n                classNames=\"titleSlide\"\n                timeout={500}\n                unmountOnExit>\n                <ContactList contacts={contacts} />\n            </CSSTransition>)}\n        </PhonebookWrapper >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { contacts: state.contacts.items };\n}\n\nexport default connect(mapStateToProps)(ContactsPage)","const REACT_APP_BASE_URL = 'https://redux-hm-07-default-rtdb.firebaseio.com';\nconst REACT_APP_SINGUP_URL = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBXWnY5qDf69_ucv7wLIwwrmlQaUcMG9aA';\nconst REACT_APP_SINGIN_URL = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBXWnY5qDf69_ucv7wLIwwrmlQaUcMG9aA';\n\nexport { REACT_APP_BASE_URL, REACT_APP_SINGUP_URL, REACT_APP_SINGIN_URL }"],"sourceRoot":""}