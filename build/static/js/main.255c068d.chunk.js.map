{"version":3,"sources":["components/contactForm/styledForm.js","redux/actions/contactsActions.js","components/notifications/styledNotification.js","components/notifications/Notification.js","redux/selectors/contactsSelectors.js","components/contactForm/ContactForm.js","redux/operations/contactsOperations.js","components/contactList/styledList.js","components/contactList/ContactList.js","components/filter/styledFilter.js","components/filter/Filter.js","components/styledApp.js","components/App.js","redux/redusers/contactsReducer.js","redux/redusers/rootRedusers.js","redux/store.js","index.js"],"names":["FormWrapper","styled","form","addContactActionCreator","createAction","getContacts","deleteContactActionCreator","filterContactsActionCreater","e","payload","target","value","alertContactsActionCreater","setLoading","setError","AlertWrapper","div","Notification","text","className","getContactsSelector","state","contacts","items","getFilterValueSelector","filter","getTextAlertSelector","getLoadingSelector","isLoading","getFilterSelector","createSelector","contact","name","toLowerCase","includes","ContactForm","useSelector","contactsSelectors","dispatch","useDispatch","useState","number","setState","useEffect","setTimeout","handleChange","prev","CSSTransition","in","classNames","timeout","unmountOnExit","onSubmit","preventDefault","length","some","axios","post","process","then","response","id","data","catch","error","finally","type","onChange","Div","LI","transition","li","attrs","mountOnEnter","ContactList","handleDeleteContact","delete","deleteContactOperation","TransitionGroup","component","map","onClick","FilterWrapper","Filter","placeholder","PhonebookWrapper","connect","appear","initialState","contactsReducer","item","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.255c068d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\nmargin-bottom: 20px;\n.label{\n    font-size: 20px;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 5px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n    \n    font-size: 20px;\n    border-radius: 5px;\n    border: 1px solid #afaeb0;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n.buttonWrapper{\n   display:flex;\n   justify-content:flex-end;\n}\n.button{\n    \t\n   width: 25%;\n   padding: 5px 10px; \n   font-size: 20px;\n   border-radius: 5px;\n   border-color: #eeedfa;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n   background-color:#eeedfa;\n   cursor: pointer;\n   \n   &:hover {\n       background-color:#3CB371;\n       box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n.alertSlide-enter{\ntransform: translateX(200%);\n}\n.alertSlide-enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n.alertSlide-exit{\n    transform: translateX(0);\n}\n.alertSlide-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n\n`","\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContactActionCreator = createAction(\"ADD_NEW_CONTACT\")\n\nexport const getContacts = createAction(\"GET_CONTACTS\");\n\nexport const deleteContactActionCreator = createAction(\"DELETE_NEW_CONTACT\")\n\nexport const filterContactsActionCreater = createAction(\"FILTER_CONTACT\", e => {\n    const { value } = e.target;\n    return {\n        payload: value,\n    }\n})\n\nexport const alertContactsActionCreater = createAction(\"ALERT_CONTACT\")\n\nexport const setLoading = createAction(\"LOADING_CONTACT\");\n\nexport const setError = createAction(\"SET_ERROR\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const addContactActionCreator = (data) => {\n//     return {\n//         type: ADDNEWCONTACT, payload: { ...data, id: uuidv4() }\n//     }\n// }\n\n// export const deleteContactActionCreator = (e) => {\n//     const id = e.target.dataset.id;\n//     return {\n//         type: DELETECONTACT, payload: id\n//     }\n// }\n\n// export const filterContactsActionCreater = (e) => {\n//     const { value } = e.target;\n//     return {\n//         type: SETFILTER, payload: value,\n//     }\n\n// }\n\n// export const alertContactsActionCreater = (text) => {\n//     return {\n//         type: SETALERT, payload: text\n//     }\n\n// }","import styled from 'styled-components';\n\nexport const AlertWrapper = styled.div`\nwidth: 50vw;\nmargin:0 auto;\npadding: 20px;\nbackground-color: #f55d67;\nborder: 1px solid #afaeb0;\nborder-radius: 5px;\n.alertText{\n    text-align: center;\n    font-size: 30px;\n    color: #ffffff;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { AlertWrapper } from './styledNotification';\n\nconst Notification = ({ text }) => {\n    return (\n        <AlertWrapper>\n            <p className=\"alertText\">&#10071;{text}&#10071;</p>\n        </AlertWrapper>\n    )\n}\n\nexport default Notification\n\nNotification.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContactsSelector = state => state.contacts.items;\nconst getTextAlertSelector = state => state.contacts.text;\nconst getLoadingSelector = state => state.contacts.isLoading;\nconst getFilterValueSelector = state => state.contacts.filter;\n\nconst getFilterSelector = createSelector([getContactsSelector, getFilterValueSelector], (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n})\n\n// const getFilterSelector = state => {\n//     const items = getContactsSelector(state)\n//     const filterValue = getFilterValueSelector(state)\n//     items.filter(item => item.name.toLowerCase()\n//         .includes(filterValue.toLowerCase()))\n// };\n\nexport default {\n    getContactsSelector,\n    getTextAlertSelector,\n    getLoadingSelector,\n    getFilterSelector,\n    getFilterValueSelector,\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CSSTransition } from 'react-transition-group';\n\nimport { FormWrapper } from './styledForm';\nimport { alertContactsActionCreater } from '../../redux/actions/contactsActions';\nimport Notification from '../notifications/Notification'\nimport { addNewContactOperation } from '../../redux/operations/contactsOperations';\nimport contactsSelectors from '../../redux/selectors/contactsSelectors';\n// import { addContactActionCreator } from '../../redux/redusers/contactsReducer'\n// import PropTypes from \"prop-types\";\n// import { connect } from 'react-redux';\n\n\nconst ContactForm = () => {\n    const contacts = useSelector((state) => contactsSelectors.getContactsSelector(state))\n    const text = useSelector((state) => contactsSelectors.getTextAlertSelector(state))\n    const isLoading = useSelector((state) => contactsSelectors.getLoadingSelector(state));\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        name: '',\n        number: '',\n    });\n    useEffect(() => {\n        if (text) {\n            setTimeout(() => { dispatch(alertContactsActionCreater('')) }, 2000)\n        }\n\n    }, [text, dispatch])\n\n    const hadlleSubmit = e => {\n        e.preventDefault();\n        if (!state.name.length) {\n            dispatch(alertContactsActionCreater('Please, enter your name'))\n        }\n        else if (!state.number.length) {\n            dispatch(alertContactsActionCreater('Please, enter your number'))\n        }\n        else {\n            if (contacts.some((contact) =>\n                contact.name.toLowerCase() === state.name.toLowerCase())) {\n\n                dispatch(alertContactsActionCreater(`${state.name} is already in contacts.`))\n            }\n            else {\n                // dispatch(addContactActionCreator({ ...state }))\n                dispatch(addNewContactOperation(state));\n            }\n        }\n\n        setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setState(prev => ({\n            ...prev, [name]: value\n        }))\n    }\n\n    return (\n        <>\n            {text &&\n                <CSSTransition\n                    in={true}\n                    classNames=\"alertSlide\"\n                    timeout={500}\n                    unmountOnExit\n                >\n                    <Notification text={text} />\n                </CSSTransition>}\n            {isLoading && <h2>...Send data...</h2>}\n            <FormWrapper className=\"wrapper\" onSubmit={hadlleSubmit}>\n                <label className=\"label\">Name\n                     <input className=\"input\" type=\"text\" name=\"name\" value={state.name} onChange={handleChange}></input>\n                </label>\n                <label className=\"label\">Number\n                     <input className=\"input\" type=\"tel\" name=\"number\" value={state.number} onChange={handleChange}></input>\n                </label>\n                <div className=\"buttonWrapper\">\n                    <button className=\"button\" type=\"submit\">Add contact</button>\n                </div>\n            </FormWrapper>\n\n        </>\n    )\n}\n\nexport default ContactForm;\n\n// const mapStateToProps = (state) => {\n//     return {\n//         contacts: state.contacts.items,\n//         text: state.contacts.text,\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         alertContactsActionCreater: (data) => {\n//             dispatch(alertContactsActionCreater(data))\n//         },\n//         addContactActionCreator: (data) => {\n//             dispatch(addContactActionCreator(data))\n//         },\n//     };\n// };\n\n\n\n\n// ContactForm.propTypes = {\n//     addContactActionCreator: PropTypes.func.isRequired,\n//     alertContactsActionCreater: PropTypes.func.isRequired,\n// }\n","import axios from \"axios\";\nimport { addContactActionCreator, deleteContactActionCreator, setLoading, setError, getContacts } from '../actions/contactsActions';\n\nexport const addNewContactOperation = (contact) => (dispatch) => {\n    dispatch(setLoading())\n    axios.post(\n        `${process.env.REACT_APP_BASE_URL}/contacts.json`,\n        contact\n    )\n        .then(response => dispatch(addContactActionCreator({ ...contact, id: response.data.name })))\n        .catch(error => dispatch(setError(error)))\n        .finally(dispatch(setLoading()))\n}\n\nexport const getContactsOperation = () => (dispatch) => {\n    dispatch(setLoading());\n    axios.get(\n        `${process.env.REACT_APP_BASE_URL}/contacts.json`\n    )\n        .then(response => {\n            dispatch(getContacts(Object.keys(response.data).map((key) => ({\n                ...response.data[key],\n                id: key,\n            }))))\n        })\n        .catch(error => dispatch(setError(error)))\n        .finally(dispatch(setLoading()))\n}\n\nexport const deleteContactOperation = (id) => (dispatch) => {\n    dispatch(setLoading());\n    axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`)\n        .then(response => dispatch(deleteContactActionCreator(id)))\n        .catch(error => dispatch(setError(error)))\n        .finally(dispatch(setLoading()))\n\n}\n","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n.contactList{\n  list-style: none;\n}\n\n.itemContact{\n    display:flex;\n    justify-content: space-between;\n    padding: 5px 10px;\n    font-size: 20px;\n    background-color:#ffffff;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n    border: 1px solid #afaeb0;\n    border-radius: 5px;\n   \n     &:not(:last-child) {\n      margin-bottom: 10px;}\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n\n}\n.button{\n   width: 25%;\n   padding: 5px 10px; \n   \t\n   font-size: 20px;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n\n   border-radius: 5px;\n   border-color: #eeedfa;\n\n   background-color:#eeedfa;\n   cursor: pointer;\n   \n   &:hover {\n       background-color:#3CB371;\n       box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n\n`","import React from 'react';\nimport { TransitionGroup } from 'react-transition-group';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Div } from './styledList';\nimport transition from 'styled-transition-group';\n\nimport { deleteContactOperation } from '../../redux/operations/contactsOperations';\nimport contactsSelectors from '../../redux/selectors/contactsSelectors';\n// import PropTypes from \"prop-types\";\n// import { connect } from 'react-redux';\n// import { deleteContactActionCreator } from '../../redux/actions/contactsActions';\n\nconst LI = transition.li.attrs({\n    mountOnEnter: true,\n    unmountOnExit: true,\n    timeout: 250,\n})`\n&:enter{transform: translateX(-200%);}\n&:enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n&:exit{transform: transform: translateX(0);}\n&:exit-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n`\n\nconst ContactList = () => {\n    const contacts = useSelector((state) => contactsSelectors.getFilterSelector(state))\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = (e) => {\n        const id = e.target.id;\n        dispatch(deleteContactOperation(id));\n    };\n    return (\n\n        <Div>\n            <TransitionGroup component=\"ul\" className=\"contactList wrapper\">\n                {contacts.map(({ id, name, number }) => {\n                    return (\n                        <LI key={id} timeout={250} className=\"itemContact\">\n                            {`${name}:  ${number}`}\n                            <button className=\"button\" type=\"button\" id={id} onClick={handleDeleteContact}>Delete</button>\n                        </LI>\n                    )\n                })}\n\n            </TransitionGroup >\n        </Div>\n\n\n    )\n}\n\nexport default ContactList\n\n// const mapStateToPerops = (state) => {\n//     return {\n//         contacts: state.contacts.items.filter(item => item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())),\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n\n//         deleteContactActionCreator: (data) => {\n//             dispatch(deleteContactActionCreator(data))\n//         },\n//     }\n// }\n\n\n\n\n// ContactList.propTypes = {\n//     deleteContactActionCreator: PropTypes.func.isRequired,\n//     contacts: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//     })),\n// }","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\nmargin-bottom: 20px;\n\n.titleFilter{\nfont-size: 25px;\ncolor:#2F4F4F;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 20px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n\n    font-size: 20px;\n    border-radius: 5px;\n    border: 1px solid #afaeb0;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n`;","import React from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { FilterWrapper } from './styledFilter'\nimport { filterContactsActionCreater } from '../../redux/actions/contactsActions';\nimport contactsSelectors from '../../redux/selectors/contactsSelectors';\n// import { connect } from 'react-redux';\n// import PropTypes from \"prop-types\";\n\nconst Filter = () => {\n    const filter = useSelector((state) => contactsSelectors.getFilterValueSelector(state))\n    const dispatch = useDispatch();\n\n    const handleFilter = (data) => dispatch(filterContactsActionCreater(data))\n\n    return (\n\n        <FilterWrapper className=\"wrapper\">\n            <h3 className=\"titleFilter\">Find contacts by name</h3>\n            <input name=\"filter\" type=\"text\" className=\"input\" placeholder=\"Search...\" value={filter} onChange={handleFilter} />\n        </FilterWrapper>\n    )\n}\n\nexport default Filter\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const mapStateToProps = (state) => {\n//     return {\n//         state: state.contacts.items,\n//         filter: state.contacts.filter\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n\n//         filterContactsActionCreater: (data) => {\n//             dispatch(filterContactsActionCreater(data))\n//         },\n//     }\n// }\n\n\n\n// Filter.propTypes = {\n//     filterContactsActionCreater: PropTypes.func.isRequired,\n//     contacts: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//     })),\n// }\n","import styled from 'styled-components';\n\nexport const PhonebookWrapper = styled.div`\n.mainTitle,.title{\ntext-align: center;\ncolor:#3b2dd6;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n.mainTitle{\n    margin-bottom:20px;  \n    font-size: 40px;\n}\n.title{\n    margin-bottom:10px;\n    font-size: 30px;   \n}\n\n.titleSlide-appear{\n    transform: translateY(-100%);\n}\n.titleSlide-appear-active{\n    transform: translateY(0);\n    transition:transform 500ms linear;\n}\n\n.filterSlide-enter{\ntransform: scale(0);\n    \n}\n.filterSlide-enter-active{\n   transform: scale(1);\n  transition: transform 500ms ease-in-out;\n}\n.filterSlide-exit{\n    transform: scale(1);\n}\n.filterSlide-exit-active{\n    transform: scale(0);\n  transition: transform 500ms ease-in-out;\n}\n\n.alertSlide-enter{\ntransform: translateX(200%);\n}\n.alertSlide-enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n.alertSlide-exit{\n    transform: translateX(0);\n}\n.alertSlide-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n`","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nimport { PhonebookWrapper } from './styledApp';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n    return (\n        <PhonebookWrapper>\n            <CSSTransition\n                in={true}\n                appear={true}\n                classNames=\"titleSlide\"\n                timeout={500}\n                unmountOnExit\n            >\n                <h1 className=\"mainTitle\">Phonebook</h1>\n            </CSSTransition>\n            <ContactForm />\n            <h2 className=\"title\">Contacts</h2>\n            <CSSTransition\n                in={contacts.length > 1}\n                classNames=\"filterSlide\"\n                timeout={500}\n                unmountOnExit>\n                <Filter />\n            </CSSTransition>\n            {contacts.length > 0 && (<CSSTransition\n                in={true}\n                appear={true}\n                classNames=\"titleSlide\"\n                timeout={500}\n                unmountOnExit>\n                <ContactList contacts={contacts} />\n            </CSSTransition>)}\n        </PhonebookWrapper >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { contacts: state.contacts.items };\n}\n\nexport default connect(mapStateToProps)(App)\n\n\n","// import { createReducer } from '@reduxjs/toolkit';\n// import { combineReducers } from \"redux\";\nimport { addContactActionCreator, deleteContactActionCreator, filterContactsActionCreater, alertContactsActionCreater, setLoading, setError, getContacts } from '../actions/contactsActions';\n\nconst contactsReducer = (state = { ...initialState }, { type, payload }) => {\n    switch (type) {\n        case addContactActionCreator.type:\n            return { ...state, items: [...state.items, payload] };\n        case getContacts.type:\n            return { ...state, items: [...payload] };\n        case deleteContactActionCreator.type:\n            return { ...state, items: [...state.items.filter((item) => item.id !== payload)] };\n        case filterContactsActionCreater.type:\n            return { ...state, filter: payload, };\n        case alertContactsActionCreater.type:\n            return { ...state, text: payload, };\n        case setLoading.type:\n            return { ...state, isLoading: !state.isLoading };\n        case setError.type:\n            return { ...state, error: payload };\n\n        default:\n            return state;\n    }\n}\n\nconst initialState = {\n    items: [],\n    filter: '',\n    text: '',\n    error: '',\n    isLoading: false,\n}\n\nexport default contactsReducer\n\n\n\n\n\n\n\n\n\n\n\n\n// const addContact = (state, action) => [...state, action.payload]\n\n// const deleteContact = (state, action) => [...state.filter((item) => item.id !== action.payload)]\n\n// const filterContact = (_, action) => action.payload\n\n// const alertContact = (_, action) => action.payload\n\n\n\n\n\n// const items = createReducer([], {\n//     [addContactActionCreator]: addContact,\n//     [deleteContactActionCreator]: deleteContact,\n// })\n\n// const filter = createReducer('', {\n//     [filterContactsActionCreater]: filterContact,\n// })\n\n// const text = createReducer('', {\n//     [alertContactsActionCreater]: alertContact,\n// })\n\n\n\n\n\n// export default combineReducers({\n//     items,\n//     filter,\n//     text,\n// })\n\n","import { combineReducers } from 'redux';\nimport contactsReducer from './contactsReducer';\n\nconst rootReducer = combineReducers({\n    contacts: contactsReducer,\n})\n\nexport default rootReducer","// import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit'\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './redusers/rootRedusers';\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst store = configureStore(\n    {\n        reducer: rootReducer,\n    }\n)\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}